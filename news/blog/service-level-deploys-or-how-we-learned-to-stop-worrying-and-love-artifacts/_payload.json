[{"data":1,"prerenderedAt":746},["ShallowReactive",2],{"g95LEsXVii":3},{"pageSetup":4,"sections":15},{"image":5,"title":9,"slug":10,"description":13,"keywords":14},{"url":6,"width":7,"height":8},"https://cdn.sanity.io/images/40fnhjbe/production/be5fdd3d05fcae962e774b15617ff95672785176-3840x2160.png",3840,2160,"Service Level Deploys or: How We Learned to Stop Worrying and Love Artifacts",{"current":11,"_type":12},"service-level-deploys-or-how-we-learned-to-stop-worrying-and-love-artifacts","slug","Clear Street is a cloud-native financial technology firm on a mission to modernize the brokerage ecosystem.",null,{"header":16,"content":46,"footer":657},{"date":17,"summary":13,"author":18,"category":42,"title":9,"hello":45},"2021-05-20",{"_type":19,"_id":20,"_rev":21,"photo":22,"role":37,"_updatedAt":38,"slug":39,"name":26,"_createdAt":41},"authors","HDYpJujF7Re3qdeulZkF65","oquihqXh9OzAvkinFGn7wf",{"width":23,"height":24,"extension":25,"alt":26,"hotspot":27,"asset":33,"url":36},3000,4500,"jpg","Tanishq Dubey",{"x":28,"y":29,"height":30,"_type":31,"width":32},0.5003681940292193,0.3809444699063626,0.5811170332595327,"sanity.imageHotspot",0.9988722818422834,{"_ref":34,"_type":35},"image-62796a8535c3a523884e3847db6d1c0a998e139e-3000x4500-jpg","reference","https://cdn.sanity.io/images/40fnhjbe/production/62796a8535c3a523884e3847db6d1c0a998e139e-3000x4500.jpg","Software Engineer","2024-05-30T14:45:25Z",{"current":40,"_type":12},"tanishq-dubey","2024-02-16T14:38:42Z",{"name":43,"colorSlug":44},"Engineering","engineering","world",{"type":47,"readingTime":48,"body":49,"references":561,"pressReleasesFootNote":562,"legalText":589,"form":628},"blog",10,[50,61,69,77,84,92,99,107,117,149,156,176,183,277,284,292,300,308,315,323,330,338,345,364,371,408,416,424,430,438,445,464,472,491,498,506,513,523,530,538,546,553],{"style":51,"_key":52,"markDefs":53,"children":54,"_type":60},"normal","ba15838ef3bd",[],[55],{"marks":56,"text":57,"_key":58,"_type":59},[],"2020 was a fantastic year of growth for Clear Street, seeing a rough doubling of the engineering team. With this growth came an increased demand to get code deployed into production faster.","ba15838ef3bd0","span","block",{"_type":60,"style":51,"_key":62,"markDefs":63,"children":64},"4eb1f1fba445",[],[65],{"_type":59,"marks":66,"text":67,"_key":68},[],"","4eb1f1fba4450",{"_type":60,"style":51,"_key":70,"markDefs":71,"children":72},"b45217421007",[],[73],{"_type":59,"marks":74,"text":75,"_key":76},[],"Being in the business of holding custody of customer assets and being responsible for the financial well-being of these assets, we place an extreme emphasis on the stability of our software engineering and release processes. To this end, Clear Street works in a monorepo — all code existing within one Git repository — to ensure that everyone works on the same version of the code. We also did something we called a “mono-deploy”: our once-a-week push to production after automation completed all testing in our various QA environments. By the end of 2020, this system was breaking down and needed a rethink.","b452174210070",{"_key":78,"markDefs":79,"children":80,"_type":60,"style":51},"538dc68e1747",[],[81],{"_type":59,"marks":82,"text":67,"_key":83},[],"538dc68e17470",{"markDefs":85,"children":86,"_type":60,"style":51,"_key":91},[],[87],{"text":88,"_key":89,"_type":59,"marks":90},"As teams grew, product delivery deadlines started to shift between them. Different engineering teams wanted to use different versions of the code in the repository. APIs were making and breaking compatibility. Some needed long QA cycles; some didn’t. Teams that maintained deploys now had extra work.","3dc0265769e00",[],"3dc0265769e0",{"_key":93,"markDefs":94,"children":95,"_type":60,"style":51},"3a9bea9414b9",[],[96],{"marks":97,"text":67,"_key":98,"_type":59},[],"3a9bea9414b90",{"_type":60,"style":51,"_key":100,"markDefs":101,"children":102},"fbac8c28d6ea",[],[103],{"text":104,"_key":105,"_type":59,"marks":106},"Through all this, we came up with a solution that transformed how we do work at Clear Street, empowering our engineers to take control of their releases while also maintaining our high standard of safety; we call it SLeD.","fbac8c28d6ea0",[],{"_key":108,"markDefs":109,"children":110,"_type":60,"style":116},"a77c756d4cab",[],[111],{"text":112,"_key":113,"_type":59,"marks":114},"Laying the Foundation","a77c756d4cab0",[115],"strong","h5",{"children":118,"_type":60,"style":51,"_key":147,"markDefs":148},[119,123,127,131,135,139,143],{"_type":59,"marks":120,"text":121,"_key":122},[],"Our ultimate goal was to achieve service-level deploys at Clear Street. For us, this meant empowering teams and service owners to deploy their services when they saw fit, and to do so safely. Before we could start building our ","616fcbf517c70",{"_key":124,"_type":59,"marks":125,"text":126},"616fcbf517c71",[115],"s",{"_type":59,"marks":128,"text":129,"_key":130},[],"ervice-","616fcbf517c72",{"text":132,"_key":133,"_type":59,"marks":134},"l","616fcbf517c73",[115],{"_type":59,"marks":136,"text":137,"_key":138},[],"evel ","616fcbf517c74",{"_key":140,"_type":59,"marks":141,"text":142},"616fcbf517c75",[115],"d",{"_type":59,"marks":144,"text":145,"_key":146},[],"eploy tool (SLeD), we had to change the way we developed our services.","616fcbf517c76","616fcbf517c7",[],{"style":51,"_key":150,"markDefs":151,"children":152,"_type":60},"cd167f0510db",[],[153],{"_type":59,"marks":154,"text":67,"_key":155},[],"cd167f0510db0",{"children":157,"_type":60,"style":51,"_key":171,"markDefs":172},[158,162,167],{"_type":59,"marks":159,"text":160,"_key":161},[],"From day one, we’ve run a microservices architecture on multiple ","5f961dacd1440",{"marks":163,"text":165,"_key":166,"_type":59},[164],"9e9c0f10b6fa","Kubernetes","5f961dacd1441",{"_type":59,"marks":168,"text":169,"_key":170},[]," clusters. However, because of our monorepo build system and mono-deploy, we weren’t operating in a proper microservices environment. Our internal services didn’t expose a backward compatible interface, and all services were assumed to be running the latest code. We also had tight dependencies between services in our code, which made it difficult to reason about what build changes a single code diff would produce (e.g., a change to service A’s code may affect service B because B imports from A). Consequently, we built artifacts for all of our services on any code change and deployed them all at once.","5f961dacd1442","5f961dacd144",[173],{"_type":174,"to":175,"_key":164},"link","https://kubernetes.io/",{"markDefs":177,"children":178,"_type":60,"style":51,"_key":182},[],[179],{"marks":180,"text":67,"_key":181,"_type":59},[],"e66e725395c10","e66e725395c1",{"children":184,"_type":60,"style":51,"_key":259,"markDefs":260},[185,189,194,198,203,207,212,216,221,225,230,233,238,241,246,250,255],{"text":186,"_key":187,"_type":59,"marks":188},"We decided to enforce backward compatibility (i.e., ","fa365d43a1b40",[],{"_type":59,"marks":190,"text":192,"_key":193},[191],"f77d28f3a3f5","full transitive compatibility","fa365d43a1b41",{"_type":59,"marks":195,"text":196,"_key":197},[],") for our ","fa365d43a1b42",{"_type":59,"marks":199,"text":201,"_key":202},[200],"4b48de6f0a4f","avro","fa365d43a1b43",{"_type":59,"marks":204,"text":205,"_key":206},[],", ","fa365d43a1b44",{"_type":59,"marks":208,"text":210,"_key":211},[209],"1fe3f0248228","protobuf","fa365d43a1b45",{"_key":213,"_type":59,"marks":214,"text":215},"fa365d43a1b46",[],", and ",{"text":217,"_key":218,"_type":59,"marks":219},"swagger","fa365d43a1b47",[220],"b4988e5186ee",{"_type":59,"marks":222,"text":223,"_key":224},[]," specs to ensure stable contracts between services using tools like ","fa365d43a1b48",{"_key":226,"_type":59,"marks":227,"text":229},"fa365d43a1b49",[228],"18c40094577e","Schema Registry",{"text":205,"_key":231,"_type":59,"marks":232},"fa365d43a1b410",[],{"_type":59,"marks":234,"text":236,"_key":237},[235],"75e4d447b08a","Buf","fa365d43a1b411",{"marks":239,"text":215,"_key":240,"_type":59},[],"fa365d43a1b412",{"_type":59,"marks":242,"text":244,"_key":245},[243],"bd0c646219a2","swagger_spec_compatibility","fa365d43a1b413",{"_type":59,"marks":247,"text":248,"_key":249},[],". In addition, since wire-level backward compatibility does not guarantee behavioral backward compatibility, our developers needed to start thinking about whether changes to a service preserves backward-compatible behavior. It’s important to note that we allowed for alpha and beta protocols with no backward compatibility guarantees to enable rapid iteration of new features to not hinder developer velocity. With these changes, we’ve embraced “","fa365d43a1b414",{"_type":59,"marks":251,"text":253,"_key":254},[252],"97bff6c4bb6a","expand, migrate, contract","fa365d43a1b415",{"marks":256,"text":257,"_key":258,"_type":59},[],"” as a way of safely introducing breaking changes in our service interfaces.","fa365d43a1b416","fa365d43a1b4",[261,263,265,267,269,271,273,275],{"_key":191,"_type":174,"to":262},"https://docs.confluent.io/platform/current/schema-registry/avro.html",{"_type":174,"to":264,"_key":200},"https://avro.apache.org/",{"_type":174,"to":266,"_key":209},"https://developers.google.com/protocol-buffers",{"_type":174,"to":268,"_key":220},"https://swagger.io/",{"_type":174,"to":270,"_key":228},"https://docs.confluent.io/platform/current/schema-registry/index.html",{"to":272,"_key":235,"_type":174},"https://buf.build/",{"_type":174,"to":274,"_key":243},"https://github.com/Yelp/swagger-spec-compatibility",{"_type":174,"to":276,"_key":252},"https://www.tim-wellhausen.de/papers/ExpandAndContract/ExpandAndContract.html",{"_key":278,"markDefs":279,"children":280,"_type":60,"style":51},"28d68844f0f7",[],[281],{"_type":59,"marks":282,"text":67,"_key":283},[],"28d68844f0f70",{"style":51,"_key":285,"markDefs":286,"children":287,"_type":60},"1b801a549f9f",[],[288],{"_type":59,"marks":289,"text":290,"_key":291},[],"To decouple our services, we built a system for publishing and consuming internal libraries in various languages. Instead of service A depending on some useful utility in service B’s code, both service A and B now depend on remote import M at a pinned version. We found that creating these “internal standard libraries” raised the libraries’ code quality, which was a nice side effect.","1b801a549f9f0",{"markDefs":293,"children":294,"_type":60,"style":116,"_key":299},[],[295],{"_type":59,"marks":296,"text":297,"_key":298},[115],"First we walked, now we SLeD","eafa48b41b590","eafa48b41b59",{"style":51,"_key":301,"markDefs":302,"children":303,"_type":60},"bde9bea64f6b",[],[304],{"marks":305,"text":306,"_key":307,"_type":59},[],"With our services now decoupled in our monorepo, we began developing a deployment tool that could transition us to service-level deploys. We needed a reliable, fast, and customizable tool with a simple interface. Deployments should be deterministic and idempotent, meaning that a re-played deployment should make no change to the system state. Additionally, the tool would need to support mono-deploys while we transitioned to service-level deploys.","bde9bea64f6b0",{"markDefs":309,"children":310,"_type":60,"style":51,"_key":314},[],[311],{"_type":59,"marks":312,"text":67,"_key":313},[],"c6c15becf9240","c6c15becf924",{"style":51,"_key":316,"markDefs":317,"children":318,"_type":60},"e256ce75e72b",[],[319],{"_key":320,"_type":59,"marks":321,"text":322},"e256ce75e72b0",[],"We designed SLeD to meet all of these requirements. Containerized deployments were a clear choice, meaning that all deployments would occur in a well-known, sandboxed environment. During the mono-deploy, simultaneously running hundreds of containers would likely strain the server the containers were running on. We decided to use Kubernetes to launch and run these containers on our cloud servers. As long as our Kubernetes cluster is up and running, these jobs will run until completion — regardless of whether SLeD is available. As a bonus, if there are not enough servers available to run the deployments, Kubernetes could provision as many as needed from our cloud provider.",{"_type":60,"style":51,"_key":324,"markDefs":325,"children":326},"c600f20647c1",[],[327],{"_type":59,"marks":328,"text":67,"_key":329},[],"c600f20647c10",{"_key":331,"markDefs":332,"children":333,"_type":60,"style":51},"37b0225586ce",[],[334],{"_type":59,"marks":335,"text":336,"_key":337},[],"We also introduced a concept of “deploy groups,” representing one or more services to deploy, helping us transition to service-level deploys more easily. To begin with, we had one deploy group, which represented our mono-deploy. After some time, teams began breaking off their services into their own deploy groups and removing them from the mono-deploy. They could then figure out all the edge cases of, say, mid-day deployments of a single service at a time.","37b0225586ce0",{"markDefs":339,"children":340,"_type":60,"style":51,"_key":344},[],[341],{"marks":342,"text":67,"_key":343,"_type":59},[],"e39306305c9d0","e39306305c9d",{"style":51,"_key":346,"markDefs":347,"children":351,"_type":60},"848d29dd1694",[348],{"_type":174,"to":349,"_key":350},"http://deploy.py/","8e68adf0a225",[352,356,360],{"_key":353,"_type":59,"marks":354,"text":355},"848d29dd16940",[],"Deployments, while typically Docker containers and Kubernetes resources, could come in many forms. For example, an execution engine would deploy as a binary executable onto a physical server, perhaps co-located with an exchange. Our solution was to have scriptable deployments that did not assume, for example, the deployment would result in a running Docker container. Every service contains a ",{"_type":59,"marks":357,"text":358,"_key":359},[350],"deploy.py","848d29dd16941",{"text":361,"_key":362,"_type":59,"marks":363},", which is the customizable part of the deployment and describes how SLeD deploys that service.","848d29dd16942",[],{"markDefs":365,"children":366,"_type":60,"style":51,"_key":370},[],[367],{"_type":59,"marks":368,"text":67,"_key":369},[],"897952bcb12f0","897952bcb12f",{"_type":60,"style":51,"_key":372,"markDefs":373,"children":381},"5552bab9b85b",[374,377,379],{"_type":174,"to":375,"_key":376},"https://jfrog.com/artifactory/","0c490867e84e",{"_type":174,"to":349,"_key":378},"455d10156b52",{"_type":174,"to":349,"_key":380},"ab601f35c22d",[382,386,390,394,397,401,404],{"_type":59,"marks":383,"text":384,"_key":385},[],"After every code change to a service at Clear Street, we build an “artifact,” usually a Docker container, which can be deployed immediately via SLeD. We store the artifact in our ","5552bab9b85b0",{"marks":387,"text":388,"_key":389,"_type":59},[376],"JFrog Artifactory","5552bab9b85b1",{"_type":59,"marks":391,"text":392,"_key":393},[]," instance, along with the service’s ","5552bab9b85b2",{"_type":59,"marks":395,"text":358,"_key":396},[378],"5552bab9b85b3",{"_type":59,"marks":398,"text":399,"_key":400},[],". When SLeD runs a deployment, it downloads the ","5552bab9b85b4",{"_key":402,"_type":59,"marks":403,"text":358},"5552bab9b85b5",[380],{"_type":59,"marks":405,"text":406,"_key":407},[]," and sets environment variables to point to the corresponding artifacts. From there, it’s as simple as python ./deploy.py.","5552bab9b85b6",{"_type":60,"style":116,"_key":409,"markDefs":410,"children":411},"4baabee1448c",[],[412],{"marks":413,"text":414,"_key":415,"_type":59},[115],"Writing a deploy.py","4baabee1448c0",{"_key":417,"markDefs":418,"children":419,"_type":60,"style":51},"23d238104fe1",[],[420],{"_type":59,"marks":421,"text":422,"_key":423},[],"SLeD deploys a service by simply executing the service’s deploy.py in a Kubernetes Job. To make writing a service’s deployment easy and to provide sane defaults, we developed a Python library we call libdeploy. While libdeploy currently only supports deploying Kubernetes resources, we’ve written it in a modular way to support deploying infrastructure using Terraform and deploying to bare-metal servers in the future. Here is an example deploy.py:","23d238104fe10",{"code":425,"_type":428,"_key":429},{"code":426,"_type":427},"import clearstreet. libdeploy as d\nd.deploy_all(\n  d. kubernetes.helpers.create_stateful_service(\n    \"s3exporter\",\n    http_port=8080, \n    metrics_port=8080,\n    cpu=100, \n    memory=150,\n    uses_aws=True,\n  )\n)","code","codeBlock","61e35c31cb67",{"_key":431,"markDefs":432,"children":433,"_type":60,"style":51},"7461f4ced0d3",[],[434],{"_type":59,"marks":435,"text":436,"_key":437},[],"The libdeploy library also checks for command line arguments, so a user can pass in flags such as --dry-run to render out what the deploy will look like and --validate to validate the resources the user defines.","7461f4ced0d30",{"_type":60,"style":51,"_key":439,"markDefs":440,"children":441},"d1fd41eb89a1",[],[442],{"_type":59,"marks":443,"text":67,"_key":444},[],"d1fd41eb89a10",{"children":446,"_type":60,"style":51,"_key":460,"markDefs":461},[447,451,456],{"marks":448,"text":449,"_key":450,"_type":59},[],"We opted to use Python rather than YAML or JSON because of type checking (we use ","a01f8acf0ad60",{"_type":59,"marks":452,"text":454,"_key":455},[453],"78996eeff88a","Mypy","a01f8acf0ad61",{"_type":59,"marks":457,"text":458,"_key":459},[]," for type hinting) and the ability to write custom components and deploy logic. Moreover, we didn’t want our developers to have to learn Kubernetes YAML configurations or HashiCorp Configuration Language for Terraform. Instead, by providing a common Python library for all deployable objects (e.g., Docker containers and infrastructure), we could empower our developers to take ownership of their service’s deployment lifecycle.","a01f8acf0ad62","a01f8acf0ad6",[462],{"_type":174,"to":463,"_key":453},"https://mypy.readthedocs.io/en/stable/",{"children":465,"_type":60,"style":116,"_key":470,"markDefs":471},[466],{"_type":59,"marks":467,"text":468,"_key":469},[115],"SLeD’s User Interface","49417120a03c0","49417120a03c",[],{"_type":60,"style":51,"_key":473,"markDefs":474,"children":478},"23c104b0c3d0",[475],{"_type":174,"to":476,"_key":477},"https://flutter.dev/","01a14a5885e5",[479,483,487],{"_type":59,"marks":480,"text":481,"_key":482},[],"Developers interact with SLeD using a web UI written in ","23c104b0c3d00",{"_type":59,"marks":484,"text":485,"_key":486},[477],"Flutter","23c104b0c3d01",{"_type":59,"marks":488,"text":489,"_key":490},[],". A developer can easily find the currently deployed artifacts from a service’s page, deploy an artifact to an environment, and view past deploys. SLeD displays helpful information about an artifact, such as which merge request it was built off of, when that merge request was merged, and the commit SHA of the merged merge request. Clicking on a merge request takes you to the merge request itself for more context.","23c104b0c3d02",{"children":492,"_type":60,"style":51,"_key":496,"markDefs":497},[493],{"_type":59,"marks":494,"text":67,"_key":495},[],"1d4e57456ae50","1d4e57456ae5",[],{"markDefs":499,"children":500,"_type":60,"style":51,"_key":505},[],[501],{"_type":59,"marks":502,"text":503,"_key":504},[],"Because SLeD can deploy any service to any of our environments, security is a critical factor in SLeD’s design. SLeD has authentication using Google OAuth and a role-based access control (RBAC) authorization engine, which are built-in to limit who can deploy what to which environments.","1af1c40a45730","1af1c40a4573",{"children":507,"_type":60,"style":51,"_key":511,"markDefs":512},[508],{"_type":59,"marks":509,"text":67,"_key":510},[],"429cec720e750","429cec720e75",[],{"_key":514,"asset":515,"_type":517,"alt":67,"width":518,"height":519,"url":520,"children":14,"caption":521,"extension":522,"hotspot":14},"01f88771035a",{"_ref":516,"_type":35},"image-dadc69c62baa751176598b55292ccd3376a28f16-1400x835-png","figureNews",1400,835,"https://cdn.sanity.io/images/40fnhjbe/production/dadc69c62baa751176598b55292ccd3376a28f16-1400x835.png",[],"png",{"markDefs":524,"children":525,"_type":60,"style":51,"_key":529},[],[526],{"text":67,"_key":527,"_type":59,"marks":528},"4bad2cd6ec6d0",[],"4bad2cd6ec6d",{"children":531,"_type":60,"style":116,"_key":536,"markDefs":537},[532],{"_type":59,"marks":533,"text":534,"_key":535},[115],"Conclusion","7fb4bf2628630","7fb4bf262863",[],{"_key":539,"markDefs":540,"children":541,"_type":60,"style":51},"df8567a8538d",[],[542],{"_type":59,"marks":543,"text":544,"_key":545},[],"Our transition to full service-level deploys is still ongoing, but the end is in sight. At least one of our teams deploys new code to production daily using SLeD, and team members are empowered to deploy their services as they see fit. We’ve also switched the remnants of our mono-deploy to use SLeD.","df8567a8538d0",{"markDefs":547,"children":548,"_type":60,"style":51,"_key":552},[],[549],{"_type":59,"marks":550,"text":67,"_key":551},[],"4faadcf5ad4c0","4faadcf5ad4c",{"_type":60,"style":51,"_key":554,"markDefs":555,"children":556},"1deab1e20d98",[],[557],{"_type":59,"marks":558,"text":559,"_key":560},[],"Importantly, as teams and services decouple themselves from the mono-deploy, the infrastructure team is no longer in the critical path for service deploys. This has enabled faster development cycles for service owners, which we believe improves overall service quality. To date, SLeD has completed over 100,000 deployments to our various environments in the couple of months it’s been operational. Ninety-five percent of these deployments have succeeded in under 15 seconds, giving us the power to deploy and roll back changes nearly instantly.","1deab1e20d980",[],[563,571],{"children":564,"_type":60,"style":51,"_key":569,"markDefs":570},[565],{"_type":59,"marks":566,"text":567,"_key":568},[115],"About Clear Street:","820e76cb468a0","01d9743bd6e6",[],{"_key":572,"markDefs":573,"children":577,"_type":60,"style":51},"6558fb161935",[574],{"_type":174,"href":575,"_key":576},"https://clearstreet.io","f69e401d33e9",[578,582,585],{"_key":579,"_type":59,"marks":580,"text":581},"46cc6bc340df0",[],"Clear Street is modernizing the brokerage ecosystem with financial technology and services that empower market participants with real-time data and best-in-class products, tools and teams, to navigate capital markets around the world. Complemented by white-glove service, Clear Street's cloud-native, proprietary product suite delivers financing, derivatives, execution and more to power client success, adding efficiency to the market and enabling clients to minimize risk, redundancy and cost. Clear Street’s goal is to create a single platform for every asset class, in every country and in any currency. For more information, visit ",{"_type":59,"marks":583,"text":575,"_key":584},[576],"46cc6bc340df1",{"_type":59,"marks":586,"text":587,"_key":588},[],".","46cc6bc340df2",[590,620],{"markDefs":591,"children":598,"_type":60,"style":51,"_key":619},[592,595],{"href":593,"_key":594,"_type":174},"https://brokercheck.finra.org/firm/summary/288933","10659f16c05f",{"_type":174,"href":596,"_key":597},"https://www.nfa.futures.org/BasicNet/basic-profile.aspx?nfaid=XCoGScQYyvw%3D","3c111ef5e988",[599,603,607,611,615],{"_type":59,"marks":600,"text":601,"_key":602},[],"Clear Street does not provide investment, legal, regulatory, tax, or compliance advice. Consult professionals in these fields to address your specific circumstances. These materials are: (i) solely an overview of Clear Street’s products and services; (ii) provided for informational purposes only; and (iii) subject to change without notice or obligation to replace any information contained therein.\n\nProducts and services are offered by Clear Street LLC as a Broker Dealer member FINRA and SIPC and a Futures Commission Merchant registered with the CFTC and member of NFA. Additional information about Clear Street is available on FINRA ","e217f565c4110",{"_type":59,"marks":604,"text":605,"_key":606},[594],"BrokerCheck","e217f565c4111",{"marks":608,"text":609,"_key":610,"_type":59},[],", including its Customer Relationship Summary and NFA ","e217f565c4112",{"_key":612,"_type":59,"marks":613,"text":614},"e217f565c4113",[597],"BASIC | NFA (futures.org)",{"_type":59,"marks":616,"text":617,"_key":618},[],".\n‍\nCopyright © 2024 Clear Street LLC. All rights reserved. Clear Street and the Shield Logo are Registered Trademarks of Clear Street LLC\n","e217f565c4114","cd3115128082",{"markDefs":621,"children":622,"_type":60,"style":51,"_key":627},[],[623],{"_type":59,"marks":624,"text":625,"_key":626},[],"\n","a19adde9170f0","38805a72b34d",{"title":629,"slug":630,"fields":631},"Contact","contact",[632,638,643,648,652],{"label":633,"required":634,"errorMessage":635,"_type":636,"name":637},"Full name",true,"Please add your full name","field.string","full-name",{"label":639,"required":634,"errorMessage":640,"_type":641,"name":642},"Work email","Invalid email","field.email","work-email",{"label":644,"required":634,"errorMessage":645,"_type":646,"name":647},"Work phone","Please add your work phone","field.phone","work-phone",{"required":634,"errorMessage":649,"_type":636,"name":650,"label":651},"Please add your company","company","Company",{"_type":653,"name":654,"label":655,"required":656,"errorMessage":14},"field.text","message","Message (optional)",false,{"address":658,"disclaimer":659,"footerItems":686,"legalItems":718,"legalText":14,"socialNetworks":728},"4 World Trade Center\n150 Greenwich St Floor 45\nNew York, NY 10007\n(646) 845-0036",[660,670],{"_type":60,"style":51,"_key":661,"markDefs":662,"children":665},"b41b74ae73bb",[663],{"_type":174,"href":593,"_key":664},"d38625939708",[666],{"text":667,"_key":668,"_type":59,"marks":669},"Products and services are offered by Clear Street LLC as a Broker Dealer member FINRA and SIPC and a Futures Commission Merchant registered with the CFTC and member of NFA. ","331699fdb6140",[],{"_key":671,"markDefs":672,"children":674,"_type":60,"style":51},"dbec5081eda7",[673],{"_type":174,"href":593,"_key":664},[675,679,682],{"_type":59,"marks":676,"text":677,"_key":678},[],"Additional information about Clear Street is available on FINRA ","42e587e4d749",{"_type":59,"marks":680,"text":605,"_key":681},[664],"4894062c01ca",{"_type":59,"marks":683,"text":684,"_key":685},[],", including its Customer Relationship Summary and NFA BASIC | NFA (futures.org).","6db9006e1b4a",[687,700,712],{"title":651,"pages":688},[689,693,696,699],{"type":690,"title":691,"slug":692},"internal","About","about",{"type":690,"title":694,"slug":695},"News & Content","news",{"type":690,"title":697,"slug":698},"Careers","careers",{"type":690,"title":629,"slug":630},{"title":701,"pages":702},"Services",[703,706,709],{"type":690,"title":704,"slug":705},"Institutional","institutional",{"type":690,"title":707,"slug":708},"Professional Clearing","professional-clearing",{"type":690,"title":710,"slug":711},"Active Trader","active-trader",{"title":713,"pages":714},"Products",[715],{"type":690,"title":716,"slug":717},"Studio","studio",[719,722,725],{"title":720,"slug":721},"Regulatory Disclosures","regulatory-disclosures",{"title":723,"slug":724},"Privacy Policy","privacy-policy",{"title":726,"slug":727},"Security","security",[729,734,738,742],{"_type":730,"link":731,"socialNetwork":732,"_key":733},"links","https://github.com/clear-street","github","466192507eea",{"_type":730,"link":735,"socialNetwork":736,"_key":737},"https://www.linkedin.com/company/clear-street","linkedin","43f9fa8f49d0",{"_type":730,"link":739,"socialNetwork":740,"_key":741},"https://www.youtube.com/@ClearStreetNYC","youtube","b581a744d770",{"_type":730,"link":743,"socialNetwork":744,"_key":745},"https://open.spotify.com/show/3Bbl6x17ZSdnijTTDq6tKi","spotify","7625c0ffc2b2",1733511758938]