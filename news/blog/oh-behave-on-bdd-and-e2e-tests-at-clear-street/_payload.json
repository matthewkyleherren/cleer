[{"data":1,"prerenderedAt":1271},["ShallowReactive",2],{"vhWYIqp16Z":3},{"pageSetup":4,"sections":15},{"title":5,"slug":6,"description":9,"keywords":10,"image":11},"Oh, behave! On BDD and E2E tests at Clear Street",{"current":7,"_type":8},"oh-behave-on-bdd-and-e2e-tests-at-clear-street","slug","Clear Street is an independent, non-bank prime broker building financial infrastructure for today’s institutions.",null,{"url":12,"width":13,"height":14},"https://cdn.sanity.io/images/40fnhjbe/production/b843d0011b6565e05a673cf0732e6abd97b50f34-3840x2160.png",3840,2160,{"header":16,"content":39,"footer":1182},{"author":17,"category":34,"title":5,"date":37,"summary":9,"hello":38},{"slug":18,"_createdAt":20,"name":21,"photo":22,"_id":29,"role":30,"_rev":31,"_type":32,"_updatedAt":33},{"current":19,"_type":8},"tzach-shabtay","2024-02-16T14:38:42Z","Tzach Shabtay",{"extension":23,"alt":21,"hotspot":10,"asset":24,"url":27,"width":28,"height":28},"jpg",{"_ref":25,"_type":26},"image-2a17607975a44bee8cf37f0b175738a7f1820603-300x300-jpg","reference","https://cdn.sanity.io/images/40fnhjbe/production/2a17607975a44bee8cf37f0b175738a7f1820603-300x300.jpg",300,"3vmxkk46kHuWSrwZ2ItABX","Software Engineer","YnHcRrfS97TenynEkz4gnR","authors","2024-05-31T13:21:21Z",{"name":35,"colorSlug":36},"Engineering","engineering","2023-08-23","world",{"type":40,"readingTime":41,"body":42,"references":1088,"pressReleasesFootNote":1089,"legalText":1115,"form":1154},"blog",14,[43,54,62,70,77,85,92,100,110,118,125,178,185,193,201,208,216,223,252,260,267,275,283,317,324,332,341,349,363,375,387,395,402,410,416,428,436,444,451,459,466,484,491,507,514,530,537,545,557,569,581,604,609,617,629,649,678,686,693,701,709,716,724,739,747,755,763,770,778,785,793,800,808,815,823,831,838,846,853,861,869,877,885,893,908,916,924,932,951,967,986,994,1002,1010,1022,1034,1046,1058,1066,1073,1081],{"_key":44,"markDefs":45,"children":46,"_type":52,"style":53},"763d7ab48195",[],[47],{"_type":48,"marks":49,"text":50,"_key":51},"span",[],"At Clear Street, we build products and experiences that move billions of dollars every day. Under the weight of that responsibility, testing is a priority. Collaborating with the business and using a shared language when defining the tests helps us reduce risk and increase confidence in shipping quality code. BDD and E2E testing are the weapons of choice for us.","763d7ab481950","block","normal",{"_key":55,"markDefs":56,"children":57,"_type":52,"style":53},"ddc3a850a1ce",[],[58],{"_type":48,"marks":59,"text":60,"_key":61},[],"","ddc3a850a1ce0",{"style":53,"_key":63,"markDefs":64,"children":65,"_type":52},"ff91d6992665",[],[66],{"_type":48,"marks":67,"text":68,"_key":69},[],"BDD (behavior-driven development) is a methodology that helps developers and business stakeholders collaborate by building a shared language for product specification, where the specification itself is testable code.","ff91d69926650",{"style":53,"_key":71,"markDefs":72,"children":73,"_type":52},"bbf639114846",[],[74],{"_type":48,"marks":75,"text":60,"_key":76},[],"bbf6391148460",{"_type":52,"style":53,"_key":78,"markDefs":79,"children":80},"32bcaa5ef16d",[],[81],{"marks":82,"text":83,"_key":84,"_type":48},[],"E2E testing (or end-to-end testing) relates to integration tests that are designed to test the system as whole, as opposed to unit tests, which test a single unit in isolation, typically a class or small set of code files.","32bcaa5ef16d0",{"_key":86,"markDefs":87,"children":88,"_type":52,"style":53},"43cfb99925ce",[],[89],{"_type":48,"marks":90,"text":60,"_key":91},[],"43cfb99925ce0",{"children":93,"_type":52,"style":53,"_key":98,"markDefs":99},[94],{"_key":95,"_type":48,"marks":96,"text":97},"3d6adc6812520",[],"There are many different flavors of BDD and E2E testing. In this blog, we’ll cover where this testing meets Clear Street, how we use these methodologies, the tooling we built around them, where they help us and where they don’t, challenges, and where we go next.","3d6adc681252",[],{"_key":101,"markDefs":102,"children":103,"_type":52,"style":109},"2b1adb2e3800",[],[104],{"_type":48,"marks":105,"text":107,"_key":108},[106],"strong","Back to the beginning","2b1adb2e38000","h5",{"_key":111,"markDefs":112,"children":113,"_type":52,"style":53},"0870ec59d8da",[],[114],{"_type":48,"marks":115,"text":116,"_key":117},[],"Let’s rewind 3 years to the year 2020. That was a fun year, right? The birds were chirping, and we were all stuck inside. Also that year, management decided that it was time to replace our stable-but-also-dying-inside transaction engine (named bank), with a new-and-shiny-architected-for-scale engine (named bk).","0870ec59d8da0",{"markDefs":119,"children":120,"_type":52,"style":53,"_key":124},[],[121],{"_key":122,"_type":48,"marks":123,"text":60},"097e55f79f3d0",[],"097e55f79f3d",{"_type":52,"style":53,"_key":126,"markDefs":127,"children":149},"11bbfef960cc",[128,132,135,138,143,146],{"to":129,"_key":130,"_type":131},"https://www.clearstreet.io/insights/hot-swapping-a-bank-part-1-the-problem-and-the-solution","737e9a6bcfc2","link",{"_type":131,"to":133,"_key":134},"https://www.clearstreet.io/insights/hot-swapping-a-bank-part-2-integration-and-migration-prep","f7b122b41412",{"_type":131,"to":136,"_key":137},"https://www.clearstreet.io/insights/hot-swapping-a-bank-part-3-deployment-and-life-lessons","68296b05bd96",{"_type":139,"href":140,"_key":141,"to":142},"internalLink",false,"cdfd883ffc63","/news/blog/gitlab-to-github-part-1",{"_key":144,"_type":139,"href":140,"to":145},"fb458a47ac3f","/news/blog/gitlab-to-github-part-2",{"_type":139,"href":140,"_key":147,"to":148},"fdca6ad4f2de","/news/blog/hot-swapping-a-bank-part-3-deployment-and-life-lessons",[150,154,158,162,166,170,174],{"marks":151,"text":152,"_key":153,"_type":48},[],"💡 This was a bold, game-changing decision by management (perhaps all that indoor time was getting to them). We’ve discussed this migration in detail, see ","11bbfef960cc0",{"marks":155,"text":156,"_key":157,"_type":48},[130,141],"Part 1","11bbfef960cc1",{"marks":159,"text":160,"_key":161,"_type":48},[],", ","11bbfef960cc2",{"_type":48,"marks":163,"text":164,"_key":165},[134,144],"Part 2","11bbfef960cc3",{"_type":48,"marks":167,"text":168,"_key":169},[]," & ","11bbfef960cc4",{"_type":48,"marks":171,"text":172,"_key":173},[137,147],"Part 3","11bbfef960cc5",{"_type":48,"marks":175,"text":176,"_key":177},[],".","11bbfef960cc6",{"markDefs":179,"children":180,"_type":52,"style":53,"_key":184},[],[181],{"text":60,"_key":182,"_type":48,"marks":183},"b2d5f512484a0",[],"b2d5f512484a",{"markDefs":186,"children":187,"_type":52,"style":53,"_key":192},[],[188],{"_type":48,"marks":189,"text":190,"_key":191},[],"The old bank engine was built by our co-founder and Chief Technology Officer Sachin Kumar in the very early beginnings of the firm. The new bk engine was to be built by a new team who lacked both an understanding of the existing engine and limited prime brokerage knowledge in general.","9af399acf9cf0","9af399acf9cf",{"markDefs":194,"children":195,"_type":52,"style":53,"_key":200},[],[196],{"_type":48,"marks":197,"text":198,"_key":199},[],"They started by reverse-engineering the old engine, speaking with the various business experts at the firm, writing unit tests and manually testing the new engine, but this wasn’t very fruitful.","cc936f64a44e0","cc936f64a44e",{"_key":202,"markDefs":203,"children":204,"_type":52,"style":53},"939e364929eb",[],[205],{"_key":206,"_type":48,"marks":207,"text":60},"939e364929eb0",[],{"markDefs":209,"children":210,"_type":52,"style":53,"_key":215},[],[211],{"_type":48,"marks":212,"text":213,"_key":214},[],"Progress was extremely slow and bugs kept creeping up (the legend goes that the entire team went completely bald from all the hair pulling).","5c688054be6e0","5c688054be6e",{"markDefs":217,"children":218,"_type":52,"style":53,"_key":222},[],[219],{"_type":48,"marks":220,"text":60,"_key":221},[],"594e37c145190","594e37c14519",{"hotspot":10,"children":10,"alt":224,"asset":225,"url":227,"width":228,"height":229,"extension":23,"_type":230,"caption":231,"_key":251},"Photo taken during our team meeting that year (source)",{"_ref":226,"_type":26},"image-10c39001f46c9d6235b554c1e694f30452873e86-6089x3872-jpg","https://cdn.sanity.io/images/40fnhjbe/production/10c39001f46c9d6235b554c1e694f30452873e86-6089x3872.jpg",6089,3872,"figureNews",[232],{"_type":52,"style":53,"_key":233,"markDefs":234,"children":238},"d1635cee79f8",[235],{"_type":131,"to":236,"_key":237},"https://www.pexels.com/photo/monks-in-lotus-position-meditating-5709844/","389368b4662a",[239,243,247],{"marks":240,"text":241,"_key":242,"_type":48},[],"Photo taken during our team meeting that year (","d1635cee79f80",{"marks":244,"text":245,"_key":246,"_type":48},[237],"source","d1635cee79f81",{"marks":248,"text":249,"_key":250,"_type":48},[],")","d1635cee79f82","2e981732e8ef",{"_type":52,"style":53,"_key":253,"markDefs":254,"children":255},"f73bb5f31a4c",[],[256],{"_key":257,"_type":48,"marks":258,"text":259},"f73bb5f31a4c0",[],"The team lead, Christian, decided enough was enough and started working on a solution: writing the product specification as tests in a language that both the business and engineering teams understand. He wrote a tool called drone to run those tests against the entire system.",{"style":53,"_key":261,"markDefs":262,"children":263,"_type":52},"8ffbc3518bb6",[],[264],{"_type":48,"marks":265,"text":60,"_key":266},[],"8ffbc3518bb60",{"style":53,"_key":268,"markDefs":269,"children":270,"_type":52},"fda8030d0c19",[],[271],{"_type":48,"marks":272,"text":273,"_key":274},[],"That specification was written by engineers and the business together and was tested against both the old and new system. It proved invaluable to getting the new system shipped with great quality.","fda8030d0c190",{"_key":276,"markDefs":277,"children":278,"_type":52,"style":109},"92f34dda129e",[],[279],{"_type":48,"marks":280,"text":281,"_key":282},[106],"How does drone work?","92f34dda129e0",{"_type":52,"style":53,"_key":284,"markDefs":285,"children":292},"90c273d6bd5f",[286,289],{"_type":131,"to":287,"_key":288},"https://behave.readthedocs.io/en/latest/","2330f96b3a96",{"_type":131,"to":290,"_key":291},"https://cucumber.io/docs/gherkin/","8945bb492102",[293,297,301,305,309,313],{"_type":48,"marks":294,"text":295,"_key":296},[106],"drone","90c273d6bd5f0",{"_key":298,"_type":48,"marks":299,"text":300},"90c273d6bd5f1",[]," uses a Python library called ",{"_type":48,"marks":302,"text":303,"_key":304},[288],"behave","90c273d6bd5f2",{"_type":48,"marks":306,"text":307,"_key":308},[]," to run tests written in a natural language style (written using the ","90c273d6bd5f3",{"_type":48,"marks":310,"text":311,"_key":312},[291],"Gherkin syntax","90c273d6bd5f4",{"text":314,"_key":315,"_type":48,"marks":316},"). The tests are grouped into features, where each feature has several scenarios that define how the feature behaves.","90c273d6bd5f5",[],{"_type":52,"style":53,"_key":318,"markDefs":319,"children":320},"e5285e766ee6",[],[321],{"_type":48,"marks":322,"text":60,"_key":323},[],"e5285e766ee60",{"_key":325,"markDefs":326,"children":327,"_type":52,"style":53},"a6be2abc0440",[],[328],{"text":329,"_key":330,"_type":48,"marks":331},"Here’s an example of one of our scenarios:","a6be2abc04400",[],{"alt":60,"asset":333,"hotspot":10,"height":335,"extension":336,"url":337,"width":338,"caption":339,"_key":340,"children":10,"_type":230},{"_type":26,"_ref":334},"image-e44aa08a81457ffd59426b54be392089c1e227dc-1792x1040-png",1040,"png","https://cdn.sanity.io/images/40fnhjbe/production/e44aa08a81457ffd59426b54be392089c1e227dc-1792x1040.png",1792,[],"9abed9541b49",{"markDefs":342,"children":343,"_type":52,"style":53,"_key":348},[],[344],{"_type":48,"marks":345,"text":346,"_key":347},[],"The scenario is composed from a series of steps, where each step can be one of:","2737e64bef460","2737e64bef46",{"level":350,"_type":52,"style":53,"_key":351,"listItem":352,"markDefs":353,"children":354},1,"762383c23dd5","bullet",[],[355,359],{"text":356,"_key":357,"_type":48,"marks":358},"Given","762383c23dd50",[106],{"_type":48,"marks":360,"text":361,"_key":362},[]," - a step that configures the system to prepare the test.","762383c23dd51",{"style":53,"_key":364,"listItem":352,"markDefs":365,"children":366,"level":350,"_type":52},"c45a15d92e6c",[],[367,371],{"_type":48,"marks":368,"text":369,"_key":370},[106],"When","c45a15d92e6c0",{"_type":48,"marks":372,"text":373,"_key":374},[]," - an action that triggers the system in some way.","c45a15d92e6c1",{"_key":376,"listItem":352,"markDefs":377,"children":378,"level":350,"_type":52,"style":53},"147f92a0b8eb",[],[379,383],{"_type":48,"marks":380,"text":381,"_key":382},[106],"Then","147f92a0b8eb0",{"_type":48,"marks":384,"text":385,"_key":386},[]," - an assertion that tests that something that was supposed to happen happened.","147f92a0b8eb1",{"style":53,"_key":388,"markDefs":389,"children":390,"_type":52},"bcda590dbe63",[],[391],{"_type":48,"marks":392,"text":393,"_key":394},[],"The scenario in the example sets up an instrument (a stock in this case) and an account in the system, then buys 5 shares for that stock in the account. It next tests that the trade was created and ledgers were updated correctly. Then, it rolls over the entire system 2 days forward and tests that the trade was settled and ledgers were updated correctly again.","bcda590dbe630",{"_type":52,"style":53,"_key":396,"markDefs":397,"children":398},"399d7b8088e4",[],[399],{"_type":48,"marks":400,"text":60,"_key":401},[],"399d7b8088e40",{"markDefs":403,"children":404,"_type":52,"style":53,"_key":409},[],[405],{"_type":48,"marks":406,"text":407,"_key":408},[],"Each of these steps is matched to actual Python code that talks to various components in the system to make this work behind the scenes. For example, the step to create an account is defined like this:","4b8202cfd2190","4b8202cfd219",{"code":411,"_type":414,"_key":415},{"code":412,"_type":413},"Python\n@given(\n  'I have an account \"{account_name)\" of type {account_type:AccountType}, with customer ''\ntype {customer_type:CustomerType), and margin type \"{margin_type :MarginType}\"'\n)\n@async_step\nasync def creates_account_with_given_types( \n  context: Context, \n  account_name: str, \n  account_type: proto. AccountType, \n  customer_type: Optional [proto. Customer Type], \n  margin_type: Optional [proto. MarginType],\n) -> None:\n  \"\"\"\n    Creates an account with the given account type, customer type and margin type and injects it into the context\n\n  :param account_name: Account name for the account to be created\n  :param account_type: type of account to create param customer_type: type of customer\n  :param margin_type: type of margin for this account\n  :example: Given I have an account \"Test Account\" of type pab, with customer type dvp, and margin type none\n  :example_description: Results in one account that can be referenced as Test Account' in lieu of an account_id,\n  these are available in the drone context. This account will be of the given types.\nNote that the combination of\n  types must be a valid combination or this step will fail.\n  \"\"\"\nawait _create_account( \n  context=context, \n  account_name=account_name, \n  account_type=account_type, \n  customer_type=customer_type,\n  margin_type=margin_type,\n)","code","codeBlock","635aeeb41c35",{"markDefs":417,"children":418,"_type":52,"style":53,"_key":427},[],[419,423],{"_type":48,"marks":420,"text":421,"_key":422},[106],"behave ","1262ca6d54480",{"_type":48,"marks":424,"text":425,"_key":426},[],"searches all of the step definitions to find a step that matches the text, then parses the arguments (with the help of custom defined parsers we defined for special types) and calls this function, which is standard Python code.","1262ca6d54481","1262ca6d5448",{"style":109,"_key":429,"markDefs":430,"children":431,"_type":52},"d807a0cdb2b0",[],[432],{"marks":433,"text":434,"_key":435,"_type":48},[106],"Continuous Integration (CI)","d807a0cdb2b00",{"children":437,"_type":52,"style":53,"_key":442,"markDefs":443},[438],{"marks":439,"text":440,"_key":441,"_type":48},[],"We were running this manually from the command-line for some time before we had the time to improve on our testing story. We wanted those tests to run automatically each day or with a button click on a specific pull request (we didn’t want to run automatically on a pull request, more on that later), so that we’ll see breaks early on and fix them quickly, fastening our feedback loop, and increasing confidence in our releases.","9bad60e92a6e0","9bad60e92a6e",[],{"_key":445,"markDefs":446,"children":447,"_type":52,"style":53},"c81e9e6dbd59",[],[448],{"_type":48,"marks":449,"text":60,"_key":450},[],"c81e9e6dbd590",{"children":452,"_type":52,"style":53,"_key":457,"markDefs":458},[453],{"_key":454,"_type":48,"marks":455,"text":456},"884e3d2d78770",[],"To build, we relied on Ivy, a service to deploy an ephemeral development environment with local kubernetes, which was developed by our wonderful infrastructures team.","884e3d2d7877",[],{"children":460,"_type":52,"style":53,"_key":464,"markDefs":465},[461],{"_type":48,"marks":462,"text":60,"_key":463},[],"e643ce1475a70","e643ce1475a7",[],{"children":467,"_type":52,"style":53,"_key":480,"markDefs":481},[468,472,477],{"_type":48,"marks":469,"text":470,"_key":471},[],"💡 Read more about Ivy in ","2c848634aece0",{"_type":48,"marks":473,"text":475,"_key":476},[474],"a84140d62d45","this blog post","2c848634aece1",{"_type":48,"marks":478,"text":176,"_key":479},[],"2c848634aece2","2c848634aece",[482],{"to":483,"_key":474,"_type":131},"https://www.clearstreet.io/insights/ephemeral-dev-environments-as-a-service",{"_type":52,"style":53,"_key":485,"markDefs":486,"children":487},"36423feed8d7",[],[488],{"text":60,"_key":489,"_type":48,"marks":490},"36423feed8d70",[],{"_key":492,"markDefs":493,"children":494,"_type":52,"style":53},"6006334a7035",[],[495,499,503],{"marks":496,"text":497,"_key":498,"_type":48},[],"We deploy our main development branch for the daily tests, or a specific branch for testing a pull request. We start all of the services we need to run the tests, including our drone server. We then send a request to the drone server to run all scenarios which are tagged with the service we’re testing (the example scenario from above is tagged as ","6006334a70350",{"marks":500,"text":501,"_key":502,"_type":48},[106],"bk.business_requirements","6006334a70351",{"_type":48,"marks":504,"text":505,"_key":506},[],", meaning it’s a scenario that’s part of the bk test suite).","6006334a70352",{"_type":52,"style":53,"_key":508,"markDefs":509,"children":510},"b98026f6dcb1",[],[511],{"marks":512,"text":60,"_key":513,"_type":48},[],"b98026f6dcb10",{"style":53,"_key":515,"markDefs":516,"children":517,"_type":52},"962d35f6d51f",[],[518,522,526],{"_type":48,"marks":519,"text":520,"_key":521},[],"We started with just ","962d35f6d51f0",{"text":523,"_key":524,"_type":48,"marks":525},"bk","962d35f6d51f1",[106],{"marks":527,"text":528,"_key":529,"_type":48},[],", but quickly we wanted to add this to other services which our team owns and also wanted to increase adoption with other teams in the firm.","962d35f6d51f2",{"_key":531,"markDefs":532,"children":533,"_type":52,"style":53},"c1363295a3f6",[],[534],{"_type":48,"marks":535,"text":60,"_key":536},[],"c1363295a3f60",{"_key":538,"markDefs":539,"children":540,"_type":52,"style":53},"b0ddacc54d8a",[],[541],{"text":542,"_key":543,"_type":48,"marks":544},"So, we built three Python libraries to help us making setting up e2e tests for a service a pleasant experience:","b0ddacc54d8a0",[],{"_type":52,"style":53,"_key":546,"listItem":352,"markDefs":547,"children":548,"level":350},"e7891cf04f86",[],[549,553],{"_type":48,"marks":550,"text":551,"_key":552},[106],"libivy ","e7891cf04f860",{"_type":48,"marks":554,"text":555,"_key":556},[],"- a library that speaks with the ivy API to create branch deploys and bring up services.","e7891cf04f861",{"markDefs":558,"children":559,"level":350,"_type":52,"style":53,"_key":568,"listItem":352},[],[560,564],{"_type":48,"marks":561,"text":562,"_key":563},[106],"libdrone","38e6e1efe8e00",{"_type":48,"marks":565,"text":566,"_key":567},[]," - a library that speaks with the drone server API to run scenarios, wait for them to finish and return the results.","38e6e1efe8e01","38e6e1efe8e0",{"listItem":352,"markDefs":570,"children":571,"level":350,"_type":52,"style":53,"_key":580},[],[572,576],{"_key":573,"_type":48,"marks":574,"text":575},"4ac3283d61ae0",[106],"libe2e ",{"_type":48,"marks":577,"text":578,"_key":579},[],"- a higher-level library that uses libivy and libdrone to create branch deploys, bring up services, wait for them, run the scenarios, wait for the results and post it to slack.","4ac3283d61ae1","4ac3283d61ae",{"children":582,"_type":52,"style":53,"_key":602,"markDefs":603},[583,587,591,595,598],{"_key":584,"_type":48,"marks":585,"text":586},"5911431db0bd0",[],"Here’s how we use ",{"text":588,"_key":589,"_type":48,"marks":590},"libe2e","5911431db0bd1",[106],{"_key":592,"_type":48,"marks":593,"text":594},"5911431db0bd2",[]," to run the e2e tests for ",{"_key":596,"_type":48,"marks":597,"text":523},"5911431db0bd3",[106],{"_type":48,"marks":599,"text":600,"_key":601},[],":","5911431db0bd4","5911431db0bd",[],{"code":605,"_type":414,"_key":608},{"code":606,"_type":413,"language":607},"Python\nfrom clearstreet import libe2e\n\nconfig = libe2e. Config(\n  service_name=\"bk\",\n  slack_channel=\"csc-cs-e2e\",\n  parallelism=2, \n  service_dependencies=[\n    \"proxygate\",\n    \"bkfacade\",\n    \"appliances\",\n    \"tradesuite\",\n    # ... more services here\n  ],\n  wait_for_connectors= [\n    libe2e. Connector (\"apolloconnector\", \"postgres12-bk\"), \n    libe2e. Connector (\"connector\", \"micro-connector-up\"),\n  ], \n  local_dependencies=[\n    \"bktxprocessor\",\n    \"bkgate\",\n    \"bkgatekafka\",\n    \"bkgatefile\",\n    #... more services here\n  ], \n  drone_tags= [\n    \"bk. business_requirements\",\n    \"bk. technical_requirements\",\n  ],\n  additional_tilt_args=[\n    \"--env\",\n    \"chrono. CHRONO_CHECKINS=bkcoordinator\",\n    \"--env\",\n    \"bkfacade. BKFACADE_MODE=local-only\",\n  ],\n)\n\ndef main():\n  libe2e. run (config)\n  \nif __name__ == \"__main__\":\n  main() ","python","fcfe782ad964",{"children":610,"_type":52,"style":53,"_key":615,"markDefs":616},[611],{"text":612,"_key":613,"_type":48,"marks":614},"Notable details on the configuration include:","cb7ddf9a06680",[],"cb7ddf9a0668",[],{"listItem":352,"markDefs":618,"children":619,"level":350,"_type":52,"style":53,"_key":628},[],[620,624],{"_key":621,"_type":48,"marks":622,"text":623},"2f4740de501e0",[106],"parallelism",{"_key":625,"_type":48,"marks":626,"text":627},"2f4740de501e1",[]," here defines how many branch deploys we create. Here we create 2 branch deploys and we divide up the scenarios to 2 and run them in parallel in 2 different environments to save on time.","2f4740de501e",{"markDefs":630,"children":631,"level":350,"_type":52,"style":53,"_key":648,"listItem":352},[],[632,636,640,644],{"marks":633,"text":634,"_key":635,"_type":48},[106],"service_dependencies","15ff011a47120",{"_type":48,"marks":637,"text":638,"_key":639},[]," defines all of the services we need to start up for our tests, and ","15ff011a47121",{"_type":48,"marks":641,"text":642,"_key":643},[106],"local_dependencies","15ff011a47122",{"_type":48,"marks":645,"text":646,"_key":647},[]," defines which of those services should use the local code from the branch. The services which are not local are the services which we don’t intend to test specifically, for those we use the latest pre-built images from the development branch so we save time on building those.","15ff011a47123","15ff011a4712",{"children":650,"level":350,"_type":52,"style":53,"_key":674,"listItem":352,"markDefs":675},[651,655,659,663,667,671],{"marks":652,"text":653,"_key":654,"_type":48},[106],"additional_tilt_args","0e76eeb4a5cb0",{"_type":48,"marks":656,"text":657,"_key":658},[]," defines additional configurations we pass to the services (like setting up certain feature flags), it’s called ","0e76eeb4a5cb1",{"marks":660,"text":661,"_key":662,"_type":48},[106],"tilt","0e76eeb4a5cb2",{"_type":48,"marks":664,"text":665,"_key":666},[]," because our local kubernetes environment is built on ","0e76eeb4a5cb3",{"_type":48,"marks":668,"text":661,"_key":670},[669],"bd243b722cf9","0e76eeb4a5cb4",{"marks":672,"text":176,"_key":673,"_type":48},[],"0e76eeb4a5cb5","0e76eeb4a5cb",[676],{"_type":131,"to":677,"_key":669},"https://tilt.dev/",{"_type":52,"style":53,"_key":679,"markDefs":680,"children":681},"dfa4fbe6574c",[],[682],{"marks":683,"text":684,"_key":685,"_type":48},[],"Here’s what a successful e2e run looks like on Slack (in this example, for our obligations service):","dfa4fbe6574c0",{"markDefs":687,"children":688,"_type":52,"style":53,"_key":692},[],[689],{"_type":48,"marks":690,"text":60,"_key":691},[],"251b8d770bd90","251b8d770bd9",{"_key":694,"url":695,"width":696,"extension":336,"asset":697,"children":10,"_type":230,"height":699,"alt":60,"caption":700,"hotspot":10},"a31ab4b4f357","https://cdn.sanity.io/images/40fnhjbe/production/e4dbfcfc9bcec002ee380bbf20b9fb639107f690-1328x566.png",1328,{"_ref":698,"_type":26},"image-e4dbfcfc9bcec002ee380bbf20b9fb639107f690-1328x566-png",566,[],{"_type":52,"style":53,"_key":702,"markDefs":703,"children":704},"2a1b9235920f",[],[705],{"marks":706,"text":707,"_key":708,"_type":48},[],"And here’s a bad one to compare:","2a1b9235920f0",{"markDefs":710,"children":711,"_type":52,"style":53,"_key":715},[],[712],{"_type":48,"marks":713,"text":60,"_key":714},[],"b6a1498ad4000","b6a1498ad400",{"width":717,"height":718,"alt":60,"url":719,"asset":720,"children":10,"_type":230,"hotspot":10,"extension":336,"caption":722,"_key":723},1466,1324,"https://cdn.sanity.io/images/40fnhjbe/production/40ee63115a7934b50fc0461cf1a3e81849c57000-1466x1324.png",{"_ref":721,"_type":26},"image-40ee63115a7934b50fc0461cf1a3e81849c57000-1466x1324-png",[],"7fde0c00189b",{"style":53,"_key":725,"markDefs":726,"children":727,"_type":52},"19a4e34482a1",[],[728,732,735],{"marks":729,"text":730,"_key":731,"_type":48},[],"We have an on-call person designated to look into any failures that arise and fix them. And for our more critical services like ","19a4e34482a10",{"_key":733,"_type":48,"marks":734,"text":523},"19a4e34482a11",[106],{"_type":48,"marks":736,"text":737,"_key":738},[],", we do not deploy to production unless we have a successful e2e run for the artifact we want to deploy.","19a4e34482a12",{"style":109,"_key":740,"markDefs":741,"children":742,"_type":52},"d08cac99a0a3",[],[743],{"_type":48,"marks":744,"text":745,"_key":746},[106],"Drone UI","d08cac99a0a30",{"_key":748,"markDefs":749,"children":750,"_type":52,"style":53},"d6b53896ac01",[],[751],{"text":752,"_key":753,"_type":48,"marks":754},"Following our continuous integration setup, we wanted to provide a UI to make the experience even better. This aimed to help with both running the tests locally (using CLI or the API was cumbersome), and tracking the test results, both locally and for CI failures.","d6b53896ac010",[],{"children":756,"_type":52,"style":53,"_key":761,"markDefs":762},[757],{"marks":758,"text":759,"_key":760,"_type":48},[],"Here’s how the UI looks before we run anything:","40001e5281660","40001e528166",[],{"style":53,"_key":764,"markDefs":765,"children":766,"_type":52},"92672167bb5b",[],[767],{"_type":48,"marks":768,"text":60,"_key":769},[],"92672167bb5b0",{"_type":230,"alt":60,"_key":771,"hotspot":10,"width":772,"extension":336,"asset":773,"children":10,"caption":775,"url":776,"height":777},"46168149f60f",2384,{"_ref":774,"_type":26},"image-302a7035dee73636cf10f58231afcf44c044dc6b-2384x1704-png",[],"https://cdn.sanity.io/images/40fnhjbe/production/302a7035dee73636cf10f58231afcf44c044dc6b-2384x1704.png",1704,{"style":53,"_key":779,"markDefs":780,"children":781,"_type":52},"2d5077faa6b6",[],[782],{"_type":48,"marks":783,"text":60,"_key":784},[],"2d5077faa6b60",{"children":786,"_type":52,"style":53,"_key":791,"markDefs":792},[787],{"marks":788,"text":789,"_key":790,"_type":48},[],"We select scenarios to run using the left panels, either by using the “Features” view or the “Tags” view. Here we chose all of the scenarios for the custody team and a single scenario from the bk.business_requirements tag. We can see this results in 95 scenarios in the top button which we can click to run the scenarios.","8b3762d8ea880","8b3762d8ea88",[],{"_type":52,"style":53,"_key":794,"markDefs":795,"children":796},"fa9e0c1ba441",[],[797],{"_type":48,"marks":798,"text":60,"_key":799},[],"fa9e0c1ba4410",{"markDefs":801,"children":802,"_type":52,"style":53,"_key":807},[],[803],{"text":804,"_key":805,"_type":48,"marks":806},"Once we run a set of scenarios, we’ll see a session in the top left panel which we can click to track the test live as it runs:","ebca3d970d100",[],"ebca3d970d10",{"children":809,"_type":52,"style":53,"_key":813,"markDefs":814},[810],{"text":60,"_key":811,"_type":48,"marks":812},"d6b255eb29a30",[],"d6b255eb29a3",[],{"children":10,"_key":816,"width":817,"hotspot":10,"_type":230,"alt":60,"caption":818,"asset":819,"url":821,"height":822,"extension":336},"66210e9422d7",2954,[],{"_ref":820,"_type":26},"image-de17283e9862ca491ff18117d612125100130f85-2954x1608-png","https://cdn.sanity.io/images/40fnhjbe/production/de17283e9862ca491ff18117d612125100130f85-2954x1608.png",1608,{"style":53,"_key":824,"markDefs":825,"children":826,"_type":52},"613f34384545",[],[827],{"_type":48,"marks":828,"text":829,"_key":830},[],"If we have an error we can drill down into the scenario to see which step failed, and with what error:","613f343845450",{"_key":832,"markDefs":833,"children":834,"_type":52,"style":53},"4300bbf65fb7",[],[835],{"_type":48,"marks":836,"text":60,"_key":837},[],"4300bbf65fb70",{"url":839,"width":840,"_type":230,"caption":841,"_key":842,"extension":336,"hotspot":10,"children":10,"alt":60,"asset":843,"height":845},"https://cdn.sanity.io/images/40fnhjbe/production/0c4a65698409846708147a45a2ca97bc01ca6d43-2286x1614.png",2286,[],"ab0f82f15856",{"_ref":844,"_type":26},"image-0c4a65698409846708147a45a2ca97bc01ca6d43-2286x1614-png",1614,{"_key":847,"markDefs":848,"children":849,"_type":52,"style":53},"7fb9330f16f0",[],[850],{"_type":48,"marks":851,"text":60,"_key":852},[],"7fb9330f16f00",{"children":854,"_type":52,"style":53,"_key":859,"markDefs":860},[855],{"marks":856,"text":857,"_key":858,"_type":48},[],"For tests that run using continuous integration, if there’s a failure we keep the environment alive, and you can land into drone UI straight from the slack link to troubleshoot the error.","3fbbda2064c70","3fbbda2064c7",[],{"_type":52,"style":109,"_key":862,"markDefs":863,"children":864},"482cd59ab3d4",[],[865],{"_type":48,"marks":866,"text":867,"_key":868},[106],"Challenges","482cd59ab3d40",{"_key":870,"markDefs":871,"children":872,"_type":52,"style":53},"fb87d7d76d69",[],[873],{"_key":874,"_type":48,"marks":875,"text":876},"fb87d7d76d690",[],"Not everything is rosy, of course. Here are some the challenges we are facing, and maybe this is not a perfect fit for all use cases:",{"markDefs":878,"children":879,"level":350,"_type":52,"style":53,"_key":884,"listItem":352},[],[880],{"_type":48,"marks":881,"text":882,"_key":883},[],"High maintenance: As with all integration tests that involve a lot of components, there’s a lot of flakiness involved. Breaking api changes in components, unrelated failures, one scenario changing state for another scenario, a lot of false positives, you name it, e2e tests break a lot. It’s a side effect of a very complex system. Keeping this all afloat requires needed, ongoing investment. Often, we are adding retries, fixing scenarios to make them more isolated, and handling edge cases. We decided that the investment is worth it for us - safety is very important for a financial application like ours - but it might not be worth it for other systems with less strict requirements.","b20b69b2ac0c0","b20b69b2ac0c",{"style":53,"_key":886,"listItem":352,"markDefs":887,"children":888,"level":350,"_type":52},"b61dbcd84c96",[],[889],{"_key":890,"_type":48,"marks":891,"text":892},"b61dbcd84c960",[],"Slowness: Running the tests is slow/ Bringing up the environment takes about 20-25 minutes before we even start running the tests. This, combined with the flakiness outlined in the previous section, is why we don’t want to run this automatically for every pull request.",{"_type":52,"style":53,"_key":894,"listItem":352,"markDefs":895,"children":896,"level":350},"4b1fe23bac5c",[],[897,901,904],{"_type":48,"marks":898,"text":899,"_key":900},[],"Code hygiene: by the time of this writing, ","4b1fe23bac5c0",{"_type":48,"marks":902,"text":295,"_key":903},[106],"4b1fe23bac5c1",{"_type":48,"marks":905,"text":906,"_key":907},[]," has been adopted in some fashion by 6 teams, that’s a lot of engineers contributing code to the project. It’s hard to maintain consistency, for example you can see multiple step definitions which are worded differently but do pretty much the same thing. Managing all of the dependencies on external python packages is a challenge in itself.","4b1fe23bac5c2",{"style":109,"_key":909,"markDefs":910,"children":911,"_type":52},"f117edfcee0f",[],[912],{"_type":48,"marks":913,"text":914,"_key":915},[106],"Future improvements","f117edfcee0f0",{"style":53,"_key":917,"markDefs":918,"children":919,"_type":52},"dc97801693ab",[],[920],{"_type":48,"marks":921,"text":922,"_key":923},[],"We are far from done, and there are a lot of avenues to improve in the future. Here’s a partial list:","dc97801693ab0",{"_key":925,"listItem":352,"markDefs":926,"children":927,"level":350,"_type":52,"style":53},"b35fed445b89",[],[928],{"text":929,"_key":930,"_type":48,"marks":931},"Improve performance: How can we make the tests faster? One thought would be creating a pool of ivy environments on standby which the e2e tests can pick up and save the startup costs. Another is to build lightweight versions of each service that contain most of the business logic but use lighter resources such as in-memory storage instead of full databases, for example.","b35fed445b890",[],{"_key":933,"listItem":352,"markDefs":934,"children":938,"level":350,"_type":52,"style":53},"4b2fe61d0934",[935],{"_key":936,"_type":131,"to":937},"3e105fe5ee09","https://www.snowflake.com/en/",[939,943,947],{"_type":48,"marks":940,"text":941,"_key":942},[],"Increase adoption: How can we encourage more teams in the firm to adopt drone? For example, we have a lot of code that uses","4b2fe61d09340",{"_type":48,"marks":944,"text":945,"_key":946},[936]," Snowflake","4b2fe61d09341",{"_type":48,"marks":948,"text":949,"_key":950},[],", a database in the cloud that is tricky to integrate into our local dev environments in an isolated way. Other teams want to be able to mock parts of the system and not bring everything up each time.","4b2fe61d09342",{"level":350,"_type":52,"style":53,"_key":952,"listItem":352,"markDefs":953,"children":954},"357e53e81e8c",[],[955,959,963],{"_type":48,"marks":956,"text":957,"_key":958},[],"Improve user experience: For example, to view logs, developers currently need to go to the Tilt UI or grafana. Ideally, the logs would link directly from the failed scenario in the drone UI. Another pressing issue is that when an engineer wants to run a scenario that they don’t know locally, it’s not always simple to know which services you need to bring up for this to work. Wouldn’t it be nice to have the feature or scenario define the services it needs and have ","357e53e81e8c0",{"_type":48,"marks":960,"text":961,"_key":962},[106],"drone ","357e53e81e8c1",{"text":964,"_key":965,"_type":48,"marks":966},"bring those up for you automatically?","357e53e81e8c2",[],{"_type":52,"style":53,"_key":968,"listItem":352,"markDefs":969,"children":973,"level":350},"221f06973023",[970],{"_type":131,"to":971,"_key":972},"https://www.linkedin.com/pulse/performance-feature-test-paul-bruce/","c67d9ba85e95",[974,978,982],{"text":975,"_key":976,"_type":48,"marks":977},"Extend our tooling to more testing needs: We currently focus on correctness, but we’d also like to find performance regressions (","221f069730230",[],{"_key":979,"_type":48,"marks":980,"text":981},"221f069730231",[972],"performance is a feature!",{"_type":48,"marks":983,"text":984,"_key":985},[],"), do chaos tests, and stress tests to test the system under extreme conditions. Can we extend drone for this, or do we need additional tooling?","221f069730232",{"level":350,"_type":52,"style":53,"_key":987,"listItem":352,"markDefs":988,"children":989},"47c7a0bc0da8",[],[990],{"_type":48,"marks":991,"text":992,"_key":993},[],"Going open source: We would love for this to be open source. The challenge is that currently our specific business code is tied into the code that others could use. How do we make pleasant abstractions and package a web server that reads another user’s scenarios and runs their code?","47c7a0bc0da80",{"markDefs":995,"children":996,"_type":52,"style":109,"_key":1001},[],[997],{"marks":998,"text":999,"_key":1000,"_type":48},[106],"Clear Street 💗 tests","175b7d9e03a10","175b7d9e03a1",{"children":1003,"_type":52,"style":53,"_key":1008,"markDefs":1009},[1004],{"text":1005,"_key":1006,"_type":48,"marks":1007},"Using BDD and E2E tests greatly help us ship quality code. Benefits include:","e2e1f76a314a0",[],"e2e1f76a314a",[],{"level":350,"_type":52,"style":53,"_key":1011,"listItem":352,"markDefs":1012,"children":1013},"2bedae31458a",[],[1014,1018],{"_type":48,"marks":1015,"text":1016,"_key":1017},[106],"Reducing risk","2bedae31458a0",{"_key":1019,"_type":48,"marks":1020,"text":1021},"2bedae31458a1",[],": E2E tests help us discover tricky bugs that unit tests can’t, and have already saved us from shipping accidentally dangerous code on multiple occasions, thanks E2E tests!",{"style":53,"_key":1023,"listItem":352,"markDefs":1024,"children":1025,"level":350,"_type":52},"832028c90e94",[],[1026,1030],{"_type":48,"marks":1027,"text":1028,"_key":1029},[106],"Increasing confidence","832028c90e940",{"_key":1031,"_type":48,"marks":1032,"text":1033},"832028c90e941",[],": If an E2E test run fails in CI, we don’t ship that code! When all of the e2e tests pass, we can ship with confidence that the new code does not break old behaviors.",{"_key":1035,"listItem":352,"markDefs":1036,"children":1037,"level":350,"_type":52,"style":53},"59f830f5bfba",[],[1038,1042],{"marks":1039,"text":1040,"_key":1041,"_type":48},[106],"Improving communications","59f830f5bfba0",{"_type":48,"marks":1043,"text":1044,"_key":1045},[],": When a Clear Street engineer develops a new feature, they write the scenarios and share with the business stakeholders before development even starts. This common understanding helps avoid many communication breaks in the development process.","59f830f5bfba1",{"listItem":352,"markDefs":1047,"children":1048,"level":350,"_type":52,"style":53,"_key":1057},[],[1049,1053],{"_type":48,"marks":1050,"text":1051,"_key":1052},[106],"Documentation","2e621c42068c0",{"_key":1054,"_type":48,"marks":1055,"text":1056},"2e621c42068c1",[],": When a new engineer or business stakeholder joins a project, reviewing the existing scenarios can be of great help in understanding its function.","2e621c42068c",{"_type":52,"style":53,"_key":1059,"markDefs":1060,"children":1061},"b6a61b044c6c",[],[1062],{"_type":48,"marks":1063,"text":1064,"_key":1065},[],"All in all, we highly recommend using BDD to create E2E tests defined with a shared language for projects where correctness is critical and the business language is complicated.","b6a61b044c6c0",{"_key":1067,"markDefs":1068,"children":1069,"_type":52,"style":53},"4460cb7d3489",[],[1070],{"_key":1071,"_type":48,"marks":1072,"text":60},"4460cb7d34890",[],{"_type":52,"style":53,"_key":1074,"markDefs":1075,"children":1076},"d5575567960c",[],[1077],{"marks":1078,"text":1079,"_key":1080,"_type":48},[],"We are far from done, but very proud of what we achieved so far.","d5575567960c0",{"style":53,"_key":1082,"markDefs":1083,"children":1084,"_type":52},"de5080986c18",[],[1085],{"marks":1086,"text":60,"_key":1087,"_type":48},[],"de5080986c180",[],[1090,1098],{"children":1091,"_type":52,"style":53,"_key":1096,"markDefs":1097},[1092],{"_type":48,"marks":1093,"text":1094,"_key":1095},[106],"About Clear Street:","820e76cb468a0","01d9743bd6e6",[],{"_type":52,"style":53,"_key":1099,"markDefs":1100,"children":1104},"6558fb161935",[1101],{"_type":131,"href":1102,"_key":1103},"https://clearstreet.io","f69e401d33e9",[1105,1109,1112],{"text":1106,"_key":1107,"_type":48,"marks":1108},"Clear Street is modernizing the brokerage ecosystem with financial technology and services that empower market participants with real-time data and best-in-class products, tools and teams, to navigate capital markets around the world. Complemented by white-glove service, Clear Street's cloud-native, proprietary product suite delivers financing, derivatives, execution and more to power client success, adding efficiency to the market and enabling clients to minimize risk, redundancy and cost. Clear Street’s goal is to create a single platform for every asset class, in every country and in any currency. For more information, visit ","46cc6bc340df0",[],{"_type":48,"marks":1110,"text":1102,"_key":1111},[1103],"46cc6bc340df1",{"_type":48,"marks":1113,"text":176,"_key":1114},[],"46cc6bc340df2",[1116,1146],{"style":53,"_key":1117,"markDefs":1118,"children":1125,"_type":52},"cd3115128082",[1119,1122],{"_type":131,"href":1120,"_key":1121},"https://brokercheck.finra.org/firm/summary/288933","10659f16c05f",{"_type":131,"href":1123,"_key":1124},"https://www.nfa.futures.org/BasicNet/basic-profile.aspx?nfaid=XCoGScQYyvw%3D","3c111ef5e988",[1126,1130,1134,1138,1142],{"_type":48,"marks":1127,"text":1128,"_key":1129},[],"Clear Street does not provide investment, legal, regulatory, tax, or compliance advice. Consult professionals in these fields to address your specific circumstances. These materials are: (i) solely an overview of Clear Street’s products and services; (ii) provided for informational purposes only; and (iii) subject to change without notice or obligation to replace any information contained therein.\n\nProducts and services are offered by Clear Street LLC as a Broker Dealer member FINRA and SIPC and a Futures Commission Merchant registered with the CFTC and member of NFA. Additional information about Clear Street is available on FINRA ","e217f565c4110",{"_key":1131,"_type":48,"marks":1132,"text":1133},"e217f565c4111",[1121],"BrokerCheck",{"_key":1135,"_type":48,"marks":1136,"text":1137},"e217f565c4112",[],", including its Customer Relationship Summary and NFA ",{"marks":1139,"text":1140,"_key":1141,"_type":48},[1124],"BASIC | NFA (futures.org)","e217f565c4113",{"_key":1143,"_type":48,"marks":1144,"text":1145},"e217f565c4114",[],".\n‍\nCopyright © 2024 Clear Street LLC. All rights reserved. Clear Street and the Shield Logo are Registered Trademarks of Clear Street LLC\n",{"style":53,"_key":1147,"markDefs":1148,"children":1149,"_type":52},"38805a72b34d",[],[1150],{"_type":48,"marks":1151,"text":1152,"_key":1153},[],"\n","a19adde9170f0",{"title":1155,"slug":1156,"fields":1157},"Contact","contact",[1158,1164,1169,1174,1178],{"required":1159,"errorMessage":1160,"_type":1161,"name":1162,"label":1163},true,"Please add your full name","field.string","full-name","Full name",{"required":1159,"errorMessage":1165,"_type":1166,"name":1167,"label":1168},"Invalid email","field.email","work-email","Work email",{"errorMessage":1170,"_type":1171,"name":1172,"label":1173,"required":1159},"Please add your work phone","field.phone","work-phone","Work phone",{"_type":1161,"name":1175,"label":1176,"required":1159,"errorMessage":1177},"company","Company","Please add your company",{"errorMessage":10,"_type":1179,"name":1180,"label":1181,"required":140},"field.text","message","Message (optional)",{"address":1183,"disclaimer":1184,"footerItems":1211,"legalItems":1243,"legalText":10,"socialNetworks":1253},"4 World Trade Center\n150 Greenwich St Floor 45\nNew York, NY 10007\n(646) 845-0036",[1185,1195],{"markDefs":1186,"children":1189,"_type":52,"style":53,"_key":1194},[1187],{"href":1120,"_key":1188,"_type":131},"d38625939708",[1190],{"marks":1191,"text":1192,"_key":1193,"_type":48},[],"Products and services are offered by Clear Street LLC as a Broker Dealer member FINRA and SIPC and a Futures Commission Merchant registered with the CFTC and member of NFA. ","331699fdb6140","b41b74ae73bb",{"children":1196,"_type":52,"style":53,"_key":1208,"markDefs":1209},[1197,1201,1204],{"_type":48,"marks":1198,"text":1199,"_key":1200},[],"Additional information about Clear Street is available on FINRA ","42e587e4d749",{"_key":1202,"_type":48,"marks":1203,"text":1133},"4894062c01ca",[1188],{"text":1205,"_key":1206,"_type":48,"marks":1207},", including its Customer Relationship Summary and NFA BASIC | NFA (futures.org).","6db9006e1b4a",[],"dbec5081eda7",[1210],{"_type":131,"href":1120,"_key":1188},[1212,1225,1237],{"title":1176,"pages":1213},[1214,1218,1221,1224],{"type":1215,"title":1216,"slug":1217},"internal","About","about",{"type":1215,"title":1219,"slug":1220},"News & Content","news",{"type":1215,"title":1222,"slug":1223},"Careers","careers",{"type":1215,"title":1155,"slug":1156},{"title":1226,"pages":1227},"Services",[1228,1231,1234],{"type":1215,"title":1229,"slug":1230},"Institutional","institutional",{"type":1215,"title":1232,"slug":1233},"Professional Clearing","professional-clearing",{"type":1215,"title":1235,"slug":1236},"Active Trader","active-trader",{"title":1238,"pages":1239},"Products",[1240],{"type":1215,"title":1241,"slug":1242},"Studio","studio",[1244,1247,1250],{"title":1245,"slug":1246},"Regulatory Disclosures","regulatory-disclosures",{"title":1248,"slug":1249},"Privacy Policy","privacy-policy",{"title":1251,"slug":1252},"Security","security",[1254,1259,1263,1267],{"_type":1255,"link":1256,"socialNetwork":1257,"_key":1258},"links","https://github.com/clear-street","github","466192507eea",{"_type":1255,"link":1260,"socialNetwork":1261,"_key":1262},"https://www.linkedin.com/company/clear-street","linkedin","43f9fa8f49d0",{"_type":1255,"link":1264,"socialNetwork":1265,"_key":1266},"https://www.youtube.com/@ClearStreetNYC","youtube","b581a744d770",{"_type":1255,"link":1268,"socialNetwork":1269,"_key":1270},"https://open.spotify.com/show/3Bbl6x17ZSdnijTTDq6tKi","spotify","7625c0ffc2b2",1733511758596]